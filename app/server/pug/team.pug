doctype html
include includes/global.pug
html
	head
		include includes/base.pug
		+preload
		include includes/analytics.pug
		+css
		+title(`every.buzz ⬢ ${team.question_set} › ${team.question_set_edition} › ${team.team_name}`)
	body
		+header
			li: a(href=basePath(url('question_set', team)))= team.question_set
			li: a(href=basePath(url('edition', team)))= team.question_set_edition

		.left
			h1 #{team.team_name} at #{team.tournament_name}

			nav
				ul.compact
					li: a(href='#categories') Categories
					li: a(href='#tossups') Tossups
					li: a(href='#bonuses') Bonuses

			h2#players Players
			nav
				ul: for player in team.players
					li: a(href=basePath(player.player_url))= player.player_name

			h2#categories Categories

			table.small
				colgroup(span=1)
					col

				// Tossups
				colgroup(span=1)
					col
				colgroup(span=2)
				colgroup(span=2)
					col
					col
				colgroup(span=3 + 2 * team.has_powers)
				colgroup(span=2 + team.has_powers)
					col
					if team.has_powers
						col
					col
				colgroup(span=2)
					//- col
					//- col

				colgroup(span=1, style='border:none;')
					col

				// Bonuses
				colgroup(span=1)
					col
				colgroup(span=3)
					col
					col
					col
				colgroup(span=4)
				colgroup(span=5)
					col
					col
					col
					col
					col
				thead
					tr
						th
						th(colspan=12 + 3 * team.has_powers) Tossups
						th
						th(colspan=13) Bonuses
					tr
						+th(12) Category

						// Tossups
						//- +th(2) BP?
						+th(3) Heard
						+th(3) Buzzes
						//- +th(3): abbr(title='Number of recorded buzz locations (= if same as Buzzes)') BzPts
						+th(3): abbr(title='Points') Pts
						+th(3): abbr(title='Points per tossup') PPT
						+th(3): abbr(title='Points per buzz') PPBz

						if team.has_powers
							+th(2): abbr(title='Gets (= 15s + 10s)') G

							+th(2) 15s
						+th(2) 10s
						+th(2) −5s
						+th(2) 0s

						+th(3): abbr(title='Conversion rate (= Gets / Tossups Heard)') Conv
						if team.has_powers
							+th(3): abbr(title='Power rate (= 15s / Tossups Heard)') Pow
						+th(3): abbr(title='Neg rate (= −5s / Tossups Heard)') Neg
						
						+th(3): abbr(title='Buzz location % of first correct buzz') MinB%
						+th(3): abbr(title='Average correct buzz location %') AvgB%

						+th(1)

						// Bonuses
						+th(3) Heard

						+th(3).bar: abbr(title='Points') Pts
						+th(3).bar: abbr(title='Points per bonus') PPB
						+th(3).bar: abbr(title='Conversion rate (= PPB / 30)') Conv

						+th(2) 0s
						+th(2) 10s
						+th(2) 20s
						+th(2) 30s

						+th(1.5): abbr(title='survival function') sf
						+th(3).bar ≥0
						+th(3).bar ≥10
						+th(3).bar ≥20
						+th(3).bar =30
				tbody.categories
					for category in categories
						tr(class='category-' + category.level)
							th.el: span(style='padding-left:' + category.level + 'em;')
								= category.level ? category.name : 'All categories'


							td.r= category.t_countRooms

							//- td.r= bldiff(category.t_countRooms, category.t_countRoomsBzPt)
							td.r= bl(category.t_countRooms, category.t_countBzs)
							//- td.r= bldiff(category.t_countBzs, category.t_countBzPts)
							td.r= bl(category.t_countRooms, formatNegative(category.t_sum))
							
							+tdavg(category.t_countRooms, category.t_sum / category.t_countRooms, 15)
							+tdavg(category.t_countRooms, category.t_sum / category.t_countBzs,   15)

							if team.has_powers
								td.r= bl(category.t_countRooms, category.t_countG)

								td.r= bl(category.t_countRooms, category.t_count15)
							td.r= bl(category.t_countRooms, category.t_count10)
							td.r= bl(category.t_countRooms, category.t_countN5)
							td.r= bl(category.t_countRooms, category.t_count0)

							+tdb(category.t_countRooms, category.t_countG)
							if team.has_powers
								+tdb(category.t_countRooms, category.t_count15)
							+tdb(category.t_countRooms, category.t_countN5)

							td.r= bl(category.t_countBzs, formatBzPct(category.t_firstBzPt))
							td.r= bl(category.t_countBzs, formatBzPct(category.t_avgBzPt))

							td

							td.r= category.b_countRooms

							td.r= category.b_sumT
							+tdppb(category.b_countRooms, category.b_avgT)
							+tdbar(category.b_countRooms, category.b_avgT)

							td.r= bl(category.b_countRooms, category.b_count0)
							td.r= bl(category.b_countRooms, category.b_count10)
							td.r= bl(category.b_countRooms, category.b_count20)
							td.r= bl(category.b_countRooms, category.b_count30)

							td(style='line-height: 0;')
								if category.b_countRooms
									- var w = 40;
									- var p = w * 0.1;
									- var s = w / category.b_atleast0;
									svg(width=20 height=15 viewBox=`${-p} ${-p} ${w+2*p} ${w+2*p}` preserveAspectRatio='none' style='vertical-align: baseline;')
										path.sf(d=`M 0 ${w-s*category.b_atleast0} L 10 ${w-s*category.b_atleast10} L 20 ${w-s*category.b_atleast20} L 30 ${w-s*category.b_atleast30} L 40 ${w}`)
							+tdb(category.b_countRooms, category.b_atleast0)
							+tdb(category.b_countRooms, category.b_atleast10)
							+tdb(category.b_countRooms, category.b_atleast20)
							+tdb(category.b_countRooms, category.b_atleast30)






			h2#tossups Tossups

			table.small.dataTable.compact(data-order='[[3,"asc"]]' data-column-defs='[{"targets": [3], "orderData": [3, 4]}]')
				colgroup(span=3)
				colgroup(span=4 + team.has_authors)
				colgroup(span=4)
				colgroup(span=3)
				thead
					tr
						//- +th(6.5) Set edition
						//- +th(7) Site
						+th(2): abbr(title='Room') Rm
						+th(2): abbr(title='Round') Rd
						+th(9) Opponent

						+th(3)(data-name='packet') Packet
						+th(3)(data-name='position') Tossup
						if team.has_authors
							+th(3) Author
						+th(15) Category
						+th(18) Answer
						//- if edition.has_powers
						//- +th(3): abbr(title='Number of words in power') Pwds
						//- +th(3): abbr(title='Number of words') Wds

						+th(9) Player
						th Value
						th: abbr(title='Buzz location') BzPt
						th: abbr(title='Buzz location %') BzPt%
						//- +th(3) Rank

						+th(7): abbr(title='Bounceback') BB?
						+th(9) Answer given
						th: abbr(title='Protested') Pro?


				tbody.stripe.buzzes
					for buzz in buzzes
						tr(data-index=buzz.buzz_location class=buzz.class)

							//- td= buzz.question_set_edition
							//- +tdel(buzz.tournament_name)
							td= buzz.room_number
							td= buzz.round_number
							+tdel(buzz.opponent, basePath(buzz.opponent_url))

							td= buzz.packet_letter
							td= buzz.position
							if team.has_authors
								+tdel(buzz.initials, null, buzz.author)
							+tdel(buzz.category)(data-order=buzz.lft)
							+tdel(buzz.answer, basePath(buzz.tossup_url))
							//- if edition.has_powers
							//- td= buzz.power_words
							//- td= buzz.words

							+tdel(buzz.player_name, basePath(buzz.player_url))
							td.r.bg(data-order=buzz.buzz_value)= formatNegative(buzz.buzz_value)
							td.r.bg= buzz.buzz_location
							td.r.bg= formatBzPct(buzz.buzz_location_pct)
							//- td

							td.bg= buzz.bounceback
							+tdel(buzz.answer_given).bg
							td.bg= buzz.protested

			h2#bonuses Bonuses

			table.small.dataTable.compact(data-order='[[3,"asc"]]' data-column-defs='[{"targets": [3], "orderData": [3, 4]}]')
				colgroup(span=3)
				colgroup(span=4 + team.has_authors)
				colgroup(span=4)
				colgroup(span=2)
				thead
					tr
						//- +th(6.5) Set edition
						//- +th(7) Site
						+th(2): abbr(title='Room') Rm
						+th(2): abbr(title='Round') Rd
						+th(9) Opponent

						+th(3)(data-name='packet') Packet
						+th(3)(data-name='position') Bonus
						if team.has_authors
							+th(3) Author
						+th(15) Category
						+th(18) Answers

						+th(3) Total
						+th(3) Part 1
						+th(3) Part 2
						+th(3) Part 3

						+th(9) Notes
						th: abbr(title='Protested') Pro?

				tbody.stripe
					for geb in bonuses
						tr
							//- td= geb.question_set_edition
							//- +tdel(geb.tournament_name)
							td= geb.room_number
							td= geb.round_number
							+tdel(geb.opponent, basePath(geb.opponent_url))

							td= geb.packet_letter
							td= geb.position
							if team.has_authors
								+tdel(geb.initials, null, geb.author)
							+tdel(geb.category)(data-order=geb.lft)
							+tdel(geb.answers, basePath(geb.bonus_url))

							td.r= geb.total
							td.r= geb.value1
							td.r= geb.value2
							td.r= geb.value3

							+tdel(geb.answer_given)
							td= geb.protested

		+js
